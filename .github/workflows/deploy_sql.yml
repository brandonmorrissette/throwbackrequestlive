name: Deploy SQL Files

on:
    workflow_call:
        inputs:
            environment:
                required: true
                type: string
        secrets:
            AWS_ACCESS_KEY_ID:
                required: true
            AWS_SECRET_ACCESS_KEY:
                required: true
            AWS_REGION:
                required: true
    workflow_dispatch:

jobs:
  run-ecs-task:
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Fetch CloudFormation Outputs for All Stacks
        id: fetch_outputs
        run: |
            OUTPUTS=$(aws cloudformation describe-stacks --query "Stacks[].Outputs" --output json)

            echo "=== Raw OUTPUTS ==="
            echo "$OUTPUTS"
            echo "==================="

            declare -A CFN_OUTPUTS
            
            for row in $(echo "$OUTPUTS" | jq -c ".[] | .[]"); do
                OUTPUT_KEY=$(echo "$row" | jq -r '.OutputKey')
                OUTPUT_VALUE=$(echo "$row" | jq -r '.OutputValue')
                echo "Extracted OUTPUT_KEY=$OUTPUT_KEY, OUTPUT_VALUE=$OUTPUT_VALUE"
                CFN_OUTPUTS[$OUTPUT_KEY]=$OUTPUT_VALUE

                # Output to confirm the values
                echo "Set CFN_OUTPUTS[$OUTPUT_KEY] = $OUTPUT_VALUE"
            done

            echo "ECS_CLUSTER_NAME=${CFN_OUTPUTS[ecsclustername]}" >> $GITHUB_ENV
            echo "TASK_DEFINITION_ARN=${CFN_OUTPUTS[superusertaskdefinitionarn]}" >> $GITHUB_ENV
            echo "SUBNET_ID=${CFN_OUTPUTS[subnetid]}" >> $GITHUB_ENV
            echo "SECURITY_GROUP_ID=${CFN_OUTPUTS[securitygroupid]}" >> $GITHUB_ENV
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Run ECS Task
        run: |
          aws ecs run-task \
            --cluster "$ECS_CLUSTER_NAME" \
            --task-definition "$TASK_DEFINITION_ARN" \
            --network-configuration "awsvpcConfiguration={subnets=[$SUBNET_ID],securityGroups=[$SECURITY_GROUP_ID],assignPublicIp=ENABLED}"
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: ${{ secrets.AWS_REGION }}
name: Deployment Orchestration

on:
    workflow_dispatch:
        inputs:
            jobs:
                description: 'Comma-separated list of jobs to run (default: Empty to run all)'
                required: false
                default: ''

env:
    ENVIRONMENT_NAME: 'production'
    PROJECT_NAME: ${{ github.event.repository.name }}

jobs:
    deploy-app:
        if: ${{ inputs.jobs == '' }}
        name: Deploy All Stacks and Stand up the Application Environment
        uses: ./.github/workflows/deploy_app.yml
        with:
            environment: ${{ env.ENVIRONMENT_NAME }}
            project_name: ${{ env.PROJECT_NAME }}
        secrets:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: ${{ secrets.AWS_REGION }}

    deploy-network-stack:
        if: ${{ inputs.jobs != '' && contains(inputs.jobs, 'deploy-network-stack') }}
        name: Deploy Network Stack
        uses: ./.github/workflows/deploy_stack.yml
        with:
            stack-name: network-stack
        secrets:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: ${{ secrets.AWS_REGION }}

    deploy-compute-stack:
        if: ${{ inputs.jobs != '' && contains(inputs.jobs, 'deploy-compute-stack') }}
        name: Deploy Compute Stack
        uses: ./.github/workflows/deploy_stack.yml
        with:
            stack-name: compute-stack
        secrets:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: ${{ secrets.AWS_REGION }}

    deploy-environment-setup-stack:
        if: ${{ inputs.jobs != '' && contains(inputs.jobs, 'deploy-environment-setup-stack') }}
        name: Deploy Environment Setup Stack
        uses: ./.github/workflows/deploy_stack.yml
        with:
            stack-name: environment-setup-stack
        secrets:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: ${{ secrets.AWS_REGION }}

    deploy-storage-stack:
        if: ${{ inputs.jobs != '' && contains(inputs.jobs, 'deploy-storage-stack') }}
        name: Deploy Storage Stack
        uses: ./.github/workflows/deploy_stack.yml
        with:
            stack-name: storage-stack
        secrets:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: ${{ secrets.AWS_REGION }}

    deploy-sql-files:
        if: ${{ inputs.jobs != '' && contains(inputs.jobs, 'deploy-sql-files') }}
        name: Deploy SQL Files
        uses: ./.github/workflows/deploy_sql.yml
        with:
            environment: production
        secrets:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: ${{ secrets.AWS_REGION }}

    deploy-runtime-stack:
        if: ${{ inputs.jobs != '' && contains(inputs.jobs, 'deploy-runtime-stack') }}
        name: Deploy Runtime Stack
        uses: ./.github/workflows/deploy_stack.yml
        with:
            stack-name: runtime-stack
        secrets:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: ${{ secrets.AWS_REGION }}

    deploy-user-management-stack:
        if: ${{ inputs.jobs != '' && contains(inputs.jobs, 'deploy-user-management-stack') }}
        name: Deploy User Stack
        uses: ./.github/workflows/deploy_stack.yml
        with:
            stack-name: user-management-stack
        secrets:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: ${{ secrets.AWS_REGION }}

    deploy-superuser:
        if: ${{ inputs.jobs != '' && contains(inputs.jobs, 'deploy-superuser') }}
        name: Deploy Super User
        uses: ./.github/workflows/deploy_superuser.yml
        with:
            environment: production
            project_name: $ {{ env.PROJECT_NAME }}
        secrets:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: ${{ secrets.AWS_REGION }}
